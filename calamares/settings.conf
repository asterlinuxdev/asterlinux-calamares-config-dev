# YAML: list of strings.
modules-search: [ local ]

# YAML: list of maps of string:string key-value pairs.
instances:
- id:       example
  module:   netinstall
  config:   netinstall-example.conf
- id:       applications
  module:   netinstall
  config:   netinstall-applications.conf 
- id:       communication
  module:   netinstall
  config:   netinstall-communication.conf  
- id:       filemanagers
  module:   netinstall
  config:   netinstall-filemanagers.conf
- id:       graphics
  module:   netinstall
  config:   netinstall-graphics.conf
- id:       internet
  module:   netinstall
  config:   netinstall-internet.conf  
- id:       multimedia
  module:   netinstall
  config:   netinstall-multimedia.conf
- id:       office
  module:   netinstall
  config:   netinstall-office.conf
- id:       terminals
  module:   netinstall
  config:   netinstall-terminals.conf
- id:       theming
  module:   netinstall
  config:   netinstall-theming.conf
- id:       utilitiesusb
  module:   netinstall
  config:   netinstall-usb.conf  
- id:       utilities
  module:   netinstall
  config:   netinstall-utilities.conf
- id: rootfs
  module:   unpackfs
  config:   unpackfs1.conf
  weight:   50
- id: vmlinuz
  module:   unpackfs
  config:   unpackfs2.conf
  weight:   1
- id: initial
  module:   shellprocess
  config:   shellprocess-initial.conf
  weight:   11
- id: cleaner
  module:   shellprocess
  config:   shellprocess-cleaner.conf
- id: asterbefore
  module:   shellprocess
  config:   shellprocess-before.conf
- id: asterfinal
  module:   shellprocess
  config:   shellprocess-final.conf

# Sequence section. This section describes the sequence of modules, both
# viewmodules and jobmodules, as they should appear and/or run.
#
# A jobmodule instance key (or name) can only appear in an exec phase, whereas
# a viewmodule instance key (or name) can appear in both exec and show phases.
# There is no limit to the number of show or exec phases. However, the same
# module instance key should not appear more than once per phase, and
# deployers should take notice that the global storage structure is persistent
# throughout the application lifetime, possibly influencing behavior across
# phases. A show phase defines a sequence of viewmodules (and therefore
# pages). These viewmodules can offer up jobs for the execution queue.
#
# An exec phase displays a progress page (with brandable slideshow). This
# progress page iterates over the modules listed in the *immediately
# preceding* show phase, and enqueues their jobs, as well as any other jobs
# from jobmodules, in the order defined in the current exec phase.
#
# It then executes the job queue and clears it. If a viewmodule offers up a
# job for execution, but the module name (or instance key) isn't listed in the
# immediately following exec phase, this job will not be executed.
#
# YAML: list of lists of strings.
sequence:
- show:
  - welcome
#  - netinstall@example
#  - netinstall@applications
#  - netinstall@communication
#  - netinstall@filemanagers
#  - netinstall@graphics
#  - netinstall@internet
#  - netinstall@multimedia
#  - netinstall@office 
#  - netinstall@terminals
#  - netinstall@theming
#  - netinstall@utilitiesusb
#  - netinstall@utilities
  - locale
  - keyboard
  - partition
  - users
  - summary
- exec:
  - partition
  - mount
  - unpackfs@rootfs
  - unpackfs@vmlinuz
  - shellprocess@initial
  - machineid
  - fstab
  - locale
  - keyboard
  - localecfg
  - luksbootkeyfile
  - luksopenswaphookcfg
  - initcpiocfg
  - initcpio
  - networkcfg
  - hwclock
  - shellprocess@cleaner
  - services-systemd
  - shellprocess@asterbefore
  - packages
  - removeuser
  - users
  - displaymanager
  - ucode
  - grubcfg
  - bootloader
  - shellprocess@asterfinal
  - preservefiles
  - umount
- show:
  - finished
  
# A branding component is a directory, either in SHARE/calamares/branding or
# in /etc/calamares/branding (the latter takes precedence). The directory must
# contain a YAML file branding.desc which may reference additional resources
# (such as images) as paths relative to the current directory.
#
# A branding component can also ship a QML slideshow for execution pages,
# along with translation files.
#
# Only the name of the branding component (directory) should be specified
# here, Calamares then takes care of finding it and loading the contents.
#
# YAML: string.
branding: aster

# If this is set to true, Calamares will show an "Are you sure?" prompt right
# before each execution phase, i.e. at points of no return. If this is set to
# false, no prompt is shown. Default is false, but Calamares will complain if
# this is not explicitly set.
#
# YAML: boolean.
prompt-install: true

# If this is set to true, Calamares will execute all target environment
# commands in the current environment, without chroot. This setting should
# only be used when setting up Calamares as a post-install configuration tool,
# as opposed to a full operating system installer.
#
# Some official Calamares modules are not expected to function with this
# setting. (e.g. partitioning seems like a bad idea, since that is expected to
# have been done already)
#
# Default is false (for a normal installer), but Calamares will complain if
# this is not explicitly set.
#
# YAML: boolean.
dont-chroot: false

# If this is set to true, Calamares refers to itself as a "setup program"
# rather than an "installer". Defaults to the value of dont-chroot, but
# Calamares will complain if this is not explicitly set.
oem-setup: false

# If this is set to true, the "Cancel" button will be disabled entirely.
# The button is also hidden from view.
#
# This can be useful if when e.g. Calamares is used as a post-install
# configuration tool and you require the user to go through all the
# configuration steps.
#
# Default is false, but Calamares will complain if this is not explicitly set.
#
# YAML: boolean.
disable-cancel: false

# If this is set to true, the "Cancel" button will be disabled once
# you start the 'Installation', meaning there won't be a way to cancel
# the Installation until it has finished or installation has failed.
#
# Default is false, but Calamares will complain if this is not explicitly set.
#
# YAML: boolean.
disable-cancel-during-exec: false

# If this is set to true, the "Next" and "Back" button will be hidden once
# you start the 'Installation'.
#
# Default is false, but Calamares will complain if this is not explicitly set.
#
# YAML: boolean.
hide-back-and-next-during-exec: false

# If this is set to true, then once the end of the sequence has
# been reached, the quit (done) button is clicked automatically
# and Calamares will close. Default is false: the user will see
# that the end of installation has been reached, and that things are ok.
#
#
quit-at-end: false
